{"version":3,"sources":["components/InputGroup.js","App.js","registerServiceWorker.js","index.js"],"names":["InputGroup","state","isFocused","onFocus","_this","setState","onBlur","_this$props","this","props","showHints","hint","autoFocus","name","placeholder","isValid","value","onKeyPress","onChange","react_default","a","createElement","FormGroup","FormText","FormControl","isInvalid","Component","App","data","db","filter","row","enable","index","Number","localStorage","getItem","infinitive","pastSimple","pastParticiple","ru","event","Object","defineProperty","target","charCode","onNextClick","onHelpClick","nextBtnDisabled","_this$state","length","toLowerCase","nextIndex","setItem","toString","_this$state2","_this$state3","Container","Row","className","Col","xs","sm","md","lg","xl","components_InputGroup","Button","onClick","disabled","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","catch","error","ReactDOM","render","src_App_0","document","getElementById","URL","process","origin","addEventListener","concat","fetch","response","status","headers","get","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.7c22ce7e.chunk.js","sourcesContent":["import React, {Component} from 'react';\nimport PropTypes from 'prop-types';\nimport {FormGroup, FormControl, FormText} from 'react-bootstrap';\n\nclass InputGroup extends Component {\n  state = {\n    isFocused: false\n  };\n\n  onFocus = () => {\n    this.setState({ isFocused: true })\n  };\n\n  onBlur = () => {\n    this.setState({ isFocused: false })\n  };\n\n  render() {\n    const {showHints, hint, autoFocus, name, placeholder, isValid, value, onKeyPress, onChange} = this.props;\n    const {isFocused} = this.state;\n\n    return (\n      <FormGroup>\n        {showHints ? <FormText>Hint: {hint}</FormText> : null}\n        <FormControl\n          autoFocus={autoFocus}\n          name={name}\n          placeholder={placeholder}\n          value={value}\n          isValid={isValid}\n          isInvalid={value && !isFocused && !isValid}\n          onFocus={this.onFocus}\n          onBlur={this.onBlur}\n          onKeyPress={onKeyPress}\n          onChange={onChange}\n        />\n      </FormGroup>\n    );\n  }\n}\n\nInputGroup.propTypes = {\n  autoFocus: PropTypes.bool,\n  hint: PropTypes.string.isRequired,\n  showHints: PropTypes.bool,\n  name: PropTypes.string.isRequired,\n  placeholder: PropTypes.string,\n  isValid: PropTypes.bool,\n  value: PropTypes.string,\n  onKeyPress: PropTypes.func.isRequired,\n  onChange: PropTypes.func.isRequired\n};\n\nexport default InputGroup;","import React, { Component } from 'react';\nimport {Container, Row, Col, Button} from 'react-bootstrap';\nimport InputGroup from './components/InputGroup';\nimport db from './data.json';\nimport './App.css';\n\nclass App extends Component {\n  state = {\n    data: db.data.filter(row => row.enable),\n    index: Number(localStorage.getItem('index')) || 0,\n    infinitive: \"\",\n    pastSimple: \"\",\n    pastParticiple: \"\",\n    ru: \"\",\n    showHints: false\n  };\n\n  onChange = event => {\n    this.setState({\n      [event.target.name]: event.target.value\n    })\n  };\n\n  onKeyPress = target => {\n    if(target.charCode === 13){\n      this.onNextClick();\n    }\n  };\n\n  isValid(name) {\n    const {data, index} = this.state;\n    const row = data[index];\n    const value = this.state[name].toLowerCase();\n    const rowValue = row[name].toLowerCase();\n    return value === rowValue;\n  }\n\n  onHelpClick = () => {\n    this.setState({\n      showHints: !this.state.showHints\n    });\n  };\n\n  nextBtnDisabled = () => {\n    const {infinitive, pastSimple, pastParticiple, data, index} = this.state;\n    const row = data[index];\n    return (data.length === index + 1) ||\n      row.infinitive.toLowerCase() !== infinitive.toLowerCase() ||\n      row.pastSimple.toLowerCase() !== pastSimple.toLowerCase() ||\n      row.pastParticiple.toLowerCase() !== pastParticiple.toLowerCase();\n  };\n\n  onNextClick = () => {\n    if (!this.nextBtnDisabled()) {\n      const nextIndex = this.state.index + 1;\n      this.setState({\n        index: nextIndex,\n        infinitive: \"\",\n        pastSimple: \"\",\n        pastParticiple: \"\",\n        ru: \"\",\n        showHints: false\n      });\n      localStorage.setItem('index', nextIndex.toString());\n    }\n  };\n\n  render() {\n    const {data, index, infinitive, pastSimple, pastParticiple, showHints} = this.state;\n    const row = data[index];\n    return (\n      <Container>\n        <Row className=\"justify-content-sm-center\">\n          <Col xs={12} sm={9} md={7} lg={5} xl={4}>\n            <form>\n              <h3>{row.ru}</h3>\n              <InputGroup\n                autoFocus\n                name=\"infinitive\"\n                placeholder=\"Infinitive\"\n                showHints={showHints}\n                value={infinitive}\n                hint={row.infinitive}\n                isValid={this.isValid('infinitive')}\n                onKeyPress={this.onKeyPress}\n                onChange={this.onChange}\n                />\n              <InputGroup\n                name=\"pastSimple\"\n                placeholder=\"Past Simple\"\n                showHints={showHints}\n                value={pastSimple}\n                hint={row.pastSimple}\n                isValid={this.isValid('pastSimple')}\n                onKeyPress={this.onKeyPress}\n                onChange={this.onChange}\n                />\n              <InputGroup\n                name=\"pastParticiple\"\n                placeholder=\"Past Participle\"\n                showHints={showHints}\n                value={pastParticiple}\n                hint={row.pastParticiple}\n                isValid={this.isValid('pastParticiple')}\n                onKeyPress={this.onKeyPress}\n                onChange={this.onChange}\n                />\n              <div className=\"buttons\">\n                <Button className=\"pull-left\" onClick={this.onHelpClick}>\n                  {!showHints ? 'Show hints' : 'Hide hints'}\n                </Button>\n                <span>{index + 1} of {data.length}</span>\n                <Button className=\"btn-success pull-right\" disabled={this.nextBtnDisabled()} onClick={this.onNextClick}>\n                  Next\n                </Button>\n              </div>\n            </form>\n          </Col>\n        </Row>\n      </Container>\n    );\n  }\n}\n\nexport default App;\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport registerServiceWorker from './registerServiceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\nregisterServiceWorker();\n"],"sourceRoot":""}